{"version":3,"sources":["components/Person.js","components/PersonsList.js","components/FilterInput.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","removePerson","name","number","onClick","NumbersList","persons","searchFilter","showPerson","toLowerCase","includes","rows","filter","map","key","FilterInput","handleSearchFilterChange","value","onChange","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Notification","message","style","color","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","getAll","axios","get","then","response","data","post","delete","id","p","getByName","put","App","useState","setPersons","setNewName","setNewNumber","setNewSearchFilter","notification","setNotification","useEffect","personService","returnedPersons","updateNumber","updatedPerson","toUpdate","find","notify","catch","duration","setTimeout","personsListContains","length","searchfilter","event","target","preventDefault","newPerson","window","confirm","createdPerson","concat","error","PersonsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3199fd6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, removePerson }) => {\n    return (\n        <li>\n            {person.name}\n            &nbsp;\n            {person.number}\n            &nbsp;\n            <button onClick={() => removePerson(person)}>Delete</button>\n        </li>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst NumbersList = ({ persons, searchFilter, removePerson }) => {\n  const personsToShow = () => {\n    return persons.filter(person => showPerson(person.name) === true)\n  }\n\n  const showPerson = (name) => {\n    if (name.toLowerCase().includes(searchFilter.toLowerCase())) {\n      return true\n    }\n    return false\n  }\n\n  const rows = personsToShow().map(person =>\n    <Person\n      key={person.name}\n      person={person}\n      removePerson={removePerson}\n    />\n  )\n\n  return (\n    <ul>\n      {rows}\n    </ul>\n  )\n}\n\nexport default NumbersList","import React from 'react'\n\nconst FilterInput = ({searchFilter, handleSearchFilterChange}) => {\n  return (\n    <div>\n      Filter shown with&nbsp;\n      <input\n        value={searchFilter}\n        onChange={handleSearchFilterChange}\n      />\n    </div>\n\n  )\n}\n\nexport default FilterInput","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, newNumber, handleNameChange, handleNumberChange }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n\n        <div>\n          name:\n      <input\n            value={newName}\n            onChange={handleNameChange}\n          />\n        </div>\n\n        <div>number:\n        <input\n            value={newNumber}\n            onChange={handleNumberChange}\n          />\n        </div>\n\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message }) => {\n    const notificationStyle = {\n        color: 'green',\n        fontSize: 16,\n        borderStyle: 'solid',\n        borderRadius: 3,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst create = person => {\n    const request = axios.post(baseUrl, person)\n    return request.then(response => response.data)\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst remove = (person) => {\n    const request = axios.delete(`${baseUrl}/${person.id}`)\n    return request.then(response => response.data)\n}\n\nconst getByName = (person) => {\n    return getAll().then(persons => {\n        return persons.filter(p => p.name === person.name)\n    })\n}\n\nconst replaceWith = (person) => {\n    return getByName(person).then(persons => {\n        let id = null;\n        if (persons[0]) {\n            id = persons[0].id\n        }\n        return axios.put(`${baseUrl}/${id}`, person).then(response => response.data)\n    })\n}\n\nexport default {\n    create,\n    getAll,\n    remove,\n    replaceWith\n}","import React, { useState, useEffect } from 'react'\n\nimport PersonsList from './components/PersonsList'\nimport FilterInput from './components/FilterInput'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\n\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchFilter, setNewSearchFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n      .then(returnedPersons => {\n        setPersons(returnedPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (personsListContains(newName)) {\n      let choice = window.confirm(`The phonebook already includes ${newName}. Replace the old number with the new one?`)\n      if (choice) {\n        updateNumber(newPerson)\n      }\n      return\n    }\n\n    personService.create(newPerson)\n      .then(createdPerson => {\n        setPersons(persons.concat(createdPerson))\n        setNewName('')\n        setNewNumber('')\n\n        notify(`Added ${newPerson.name}.`, 2500)\n      })\n      .catch(error => {\n        notify(error.response.data.error, 5000)\n      })\n  }\n\n  const removePerson = (person) => {\n    let choice = window.confirm(`Are you sure you want to remove ${person.name}?`)\n\n    if (choice) {\n      personService.remove(person)\n        .then(setPersons(persons.filter(p => p.name !== person.name)))\n\n      notify(`Removed ${person.name}.`, 2500)\n    }\n  }\n\n  const updateNumber = (updatedPerson) => {\n    let toUpdate = persons.find(p => p.name.toLowerCase() === updatedPerson.name.toLowerCase())\n\n    if (toUpdate) {\n      personService.replaceWith(updatedPerson)\n        .then(() => {\n          setPersons(persons.map(p => p.name === toUpdate.name ? updatedPerson : p))\n          notify(`Updated ${updatedPerson.name}'s phone number.`, 2500)\n        }\n        ).catch(() => {\n          notify(`Error: ${toUpdate.name} was already removed.`, 2500)\n          // Remove the erraneous person that no longer exists from the list\n          setPersons(persons.filter(p => p.name !== toUpdate.name))\n        })\n    }\n  }\n\n  const notify = (message, duration) => {\n    setNotification(message)\n    setTimeout(() => {\n      setNotification(null)\n    }, duration)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchFilterChange = (event) => {\n    setNewSearchFilter(event.target.value)\n  }\n\n  const personsListContains = (name) => {\n    return persons.filter(person => person.name.toLowerCase() === name.toLowerCase()).length > 0\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Notification message={notification} />\n\n      <FilterInput searchfilter={searchFilter}\n        handleSearchFilterChange={handleSearchFilterChange} />\n\n      <h2>Add a new number</h2>\n\n      <PersonForm addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      < PersonsList persons={persons} searchFilter={searchFilter} removePerson={removePerson} />\n    </div >\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}